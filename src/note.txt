// import React, { useState, useEffect } from 'react';
// import { Routes, Route, Navigate } from 'react-router-dom';   

// import * as appointmentServices from './services/appointmentServices';

// import Home from './components/Home'; 
// import Hero from './components/Hero';
// import Navbar from './components/Navbar'; 
// import AppointmentList from './components/AppointmentList';
// import AppointmentDetails from './components/AppointmentDetails'; 
// import BookingForm from './components/BookingForm'; 

// const App = () => {
//   const [appointments, setAppointments] = useState([]);
//   const [selected, setSelected] = useState(null)
//   const [isFormOpen, setIsFormOpen] = useState(false);
  

//   const handleSelect = (appointment) => {
//     setSelected(appointment);
//     // Close the form if it's open when a new pet is selected.
//     setIsFormOpen(false);
//   };

//   const handleFormView = () => {
//     if (!pet._id) setSelected(null);
//     setIsFormOpen(!isFormOpen);
//   };
  

//   // return (
//     <>
//   <AppointmentList
//     appointments={appointments}
//     handleSelect={handleSelect}
//     handleFormView={handleFormView}
//     isFormOpen={isFormOpen}
//   />
//   {/* Pass handleAddAppointment and handleUpdateAppointment to BookingForm */}
//   {isFormOpen ? (
//     <BookingForm
//       handleAddAppointment={handleAddAppointment}
//       selected={selected} // Pass selected for updating if needed
//       handleUpdateAppointment={handleUpdateAppointment}
//     />
//   ) : (
//     <AppointmentDetail selected={selected} handleFormView={handleFormView} />
//   )}
// </>
// }

  
//   const handleAddAppointment = async (formData) => {
//     try {
//       const newAppointment = await appointmentService.create(formData);

//       if (newAppointment.err){
//         throw new Error(newAppointment.err);
//       }

//       setAppointments([newAppointment, ...appointments]);
//       setIsFormOpen(false);
//     } catch (err) {
//       console.log(err);
//     }
//   };




//   const App = () => {
//     const [appointments, setAppointments] = useState([]);
  
//     // Create a new useEffect
//     useEffect(() => {
//       // Create a new async function
//       const fetchAppointments = async () => {
//         // Call on the pet service's index function
//         const fetchedAppointments = await appointmentService.index();
//         // Set pets state to the returned pets data
//         setAppointments(fetchedAppointments);
//       };
//       // Invoke the function
//       fetchAppointments();
//       // Add an empty dependency array to the `useEffect()` hook.
//     }, []);
  
//     return <h1>Hello world!</h1>;
//   };

//   useEffect(() => {
//     const fetchAppointments = async () => {
//       try {
//         const fetchedAppointments = await appointmentService.index();
//         // Don't forget to pass the error object to the new Error
//         if (fetchedAppointments.err) {
//           throw new Error(fetchedAppointments.err);
//         }
//         setAppointments(fetchedAppointments);
//       } catch (err) {
//         // Log the error object
//         console.log(err);
//       }
//     };
//     fetchAppointments();
//   }, []);



// const App = () => {
//   const [appointments, setAppointments] = useState([]);

//   // useEffect() code here

//   // Return the new PetList component inside a React fragment.
//   return (
//     <>
//       <AppointmentList appointments={appointments} />
//     </>
//   );
// };

// const [appointments, setAppointments] = useState([])
// const [selected, setSelected] = useState(null)

// // useEffect code here

// // Add the following:
// const handleSelect = (appointment) => {
//   setSelected(appointment)
// }

// return (
//   <>
//     <AppointmentList appointments={appointments} handleSelect={handleSelect}/>
//   </>
// );

// export default App;

